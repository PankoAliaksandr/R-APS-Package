# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
,targ_from_excel = TRUE
)
RCO_res_l <- APS::runRCOLoops(Portfolio="RE_EU"#"APSFBEQCHL"  #needed to find the right covariance!,
,calculation_date = as.Date("2020-02-14"),
,TargetTE = seq(0.007,0.013,0.001)
,Trials=c(100000)
,InputParameters= "" #"Signals4R"
,CovReturns=c("abs")
,cov_run_id=c(310,311,312)#c(297) #c(297) #c(NA) #c(195)
,IndexFlex=FALSE #c(TRUE, FALSE)
,Ix_eq_Cash= FALSE #c(TRUE, FALSE)
,CashTolerance = 0.05 #seq(0,0.1,0.05)#seq(from=0.00,to=0.01,by=0.002), boundary for -sum(w)
,LeverageTolerance= 0.05 #seq(0,0.005,0.001)#0.025#seq(0,0.05,0.005)  #boundary for sum(w)
,algo = c("NLOPT_LD_SLSQP")# "NLOPT_LN_AUGLAG_EQ")#,"NLOPT_GN_ISRES") #"NLOPT_LD_SLSQP",  "NLOPT_LD_AUGLAG_EQ","NLOPT_LN_AUGLAG_EQ",NLOPT_LD_SLSQP","NLOPT_GN_ISRES"  #suboptimal result but optimal with X0=sol: NLOPT_LD_SLSQP,NLOPT_LD_LBFGS,NLOPT_LD_MMA(fails),
# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
,targ_from_excel = TRUE
)
RCO_res_l <- APS::runRCOLoops(Portfolio="RE_EU"#"APSFBEQCHL"  #needed to find the right covariance!,
,calculation_date = as.Date("2020-02-14"),
,TargetTE = seq(0.007,0.013,0.001)
,Trials=c(100000)
,InputParameters= "" #"Signals4R"
,CovReturns=c("abs")
,cov_run_id=c(310,311,312)#c(297) #c(297) #c(NA) #c(195)
,IndexFlex=FALSE #c(TRUE, FALSE)
,Ix_eq_Cash= FALSE #c(TRUE, FALSE)
,CashTolerance = 0.05 #seq(0,0.1,0.05)#seq(from=0.00,to=0.01,by=0.002), boundary for -sum(w)
,LeverageTolerance= 0.05 #seq(0,0.005,0.001)#0.025#seq(0,0.05,0.005)  #boundary for sum(w)
,algo = c("NLOPT_LD_SLSQP")# "NLOPT_LN_AUGLAG_EQ")#,"NLOPT_GN_ISRES") #"NLOPT_LD_SLSQP",  "NLOPT_LD_AUGLAG_EQ","NLOPT_LN_AUGLAG_EQ",NLOPT_LD_SLSQP","NLOPT_GN_ISRES"  #suboptimal result but optimal with X0=sol: NLOPT_LD_SLSQP,NLOPT_LD_LBFGS,NLOPT_LD_MMA(fails),
# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
,targ_from_excel = TRUE
)
RCO_res_l <- APS::runRCOLoops(Portfolio="RE_EU"#"APSFBEQCHL"  #needed to find the right covariance!,
,calculation_date = as.Date("2020-02-14"),
,TargetTE = seq(0.007,0.013,0.001)
,Trials=c(100000)
,InputParameters= "Signals4R" #"" #
,CovReturns=c("abs")
,cov_run_id=c(310,311,312)#c(297) #c(297) #c(NA) #c(195)
,IndexFlex=FALSE #c(TRUE, FALSE)
,Ix_eq_Cash= FALSE #c(TRUE, FALSE)
,CashTolerance = 0.05 #seq(0,0.1,0.05)#seq(from=0.00,to=0.01,by=0.002), boundary for -sum(w)
,LeverageTolerance= 0.05 #seq(0,0.005,0.001)#0.025#seq(0,0.05,0.005)  #boundary for sum(w)
,algo = c("NLOPT_LD_SLSQP")# "NLOPT_LN_AUGLAG_EQ")#,"NLOPT_GN_ISRES") #"NLOPT_LD_SLSQP",  "NLOPT_LD_AUGLAG_EQ","NLOPT_LN_AUGLAG_EQ",NLOPT_LD_SLSQP","NLOPT_GN_ISRES"  #suboptimal result but optimal with X0=sol: NLOPT_LD_SLSQP,NLOPT_LD_LBFGS,NLOPT_LD_MMA(fails),
# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
,targ_from_excel = TRUE
)
RCO_res_l <- APS::runRCOLoops(Portfolio="APSFBEQCHL"  #needed to find the right covariance!,
,calculation_date = as.Date("2020-02-14"),
,TargetTE = seq(0.007,0.013,0.001)
,Trials=c(100000)
,InputParameters= "" #"Signals4R"
,CovReturns=c("abs")
,cov_run_id=c(297) #c(297) #c(NA) #c(195)
,IndexFlex=FALSE #c(TRUE, FALSE)
,Ix_eq_Cash= FALSE #c(TRUE, FALSE)
,CashTolerance = 0.05 #seq(0,0.1,0.05)#seq(from=0.00,to=0.01,by=0.002), boundary for -sum(w)
,LeverageTolerance= 0.05 #seq(0,0.005,0.001)#0.025#seq(0,0.05,0.005)  #boundary for sum(w)
,algo = c("NLOPT_LD_SLSQP")# "NLOPT_LN_AUGLAG_EQ")#,"NLOPT_GN_ISRES") #"NLOPT_LD_SLSQP",  "NLOPT_LD_AUGLAG_EQ","NLOPT_LN_AUGLAG_EQ",NLOPT_LD_SLSQP","NLOPT_GN_ISRES"  #suboptimal result but optimal with X0=sol: NLOPT_LD_SLSQP,NLOPT_LD_LBFGS,NLOPT_LD_MMA(fails),
# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
,targ_from_excel = FALSE
)
debug(APS::runRCOLoops)
RCO_res_l <- APS::runRCOLoops(Portfolio="APSFBEQCHL"  #needed to find the right covariance!,
,calculation_date = as.Date("2020-02-14"),
,TargetTE = seq(0.007,0.013,0.001)
,Trials=c(100000)
,InputParameters= "" #"Signals4R"
,CovReturns=c("abs")
,cov_run_id=c(297) #c(297) #c(NA) #c(195)
,IndexFlex=FALSE #c(TRUE, FALSE)
,Ix_eq_Cash= FALSE #c(TRUE, FALSE)
,CashTolerance = 0.05 #seq(0,0.1,0.05)#seq(from=0.00,to=0.01,by=0.002), boundary for -sum(w)
,LeverageTolerance= 0.05 #seq(0,0.005,0.001)#0.025#seq(0,0.05,0.005)  #boundary for sum(w)
,algo = c("NLOPT_LD_SLSQP")# "NLOPT_LN_AUGLAG_EQ")#,"NLOPT_GN_ISRES") #"NLOPT_LD_SLSQP",  "NLOPT_LD_AUGLAG_EQ","NLOPT_LN_AUGLAG_EQ",NLOPT_LD_SLSQP","NLOPT_GN_ISRES"  #suboptimal result but optimal with X0=sol: NLOPT_LD_SLSQP,NLOPT_LD_LBFGS,NLOPT_LD_MMA(fails),
# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
,targ_from_excel = FALSE
)
undebug(APS::runRCOLoops)
RCO_res_l <- APS::runRCOLoops(Portfolio="APSFBEQCHL"  #needed to find the right covariance!,
,calculation_date = as.Date("2020-02-14"),
,TargetTE = seq(0.007,0.013,0.001)
,Trials=c(100000)
,InputParameters= "" #"Signals4R"
,CovReturns=c("abs")
,cov_run_id=c(297) #c(297) #c(NA) #c(195)
,IndexFlex=FALSE #c(TRUE, FALSE)
,Ix_eq_Cash= FALSE #c(TRUE, FALSE)
,CashTolerance = 0.05 #seq(0,0.1,0.05)#seq(from=0.00,to=0.01,by=0.002), boundary for -sum(w)
,LeverageTolerance= 0.05 #seq(0,0.005,0.001)#0.025#seq(0,0.05,0.005)  #boundary for sum(w)
,algo = c("NLOPT_LD_SLSQP")# "NLOPT_LN_AUGLAG_EQ")#,"NLOPT_GN_ISRES") #"NLOPT_LD_SLSQP",  "NLOPT_LD_AUGLAG_EQ","NLOPT_LN_AUGLAG_EQ",NLOPT_LD_SLSQP","NLOPT_GN_ISRES"  #suboptimal result but optimal with X0=sol: NLOPT_LD_SLSQP,NLOPT_LD_LBFGS,NLOPT_LD_MMA(fails),
# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
,targ_from_excel = FALSE
)
debug(APS::f.runRCO)
RCO_res_l <- APS::runRCOLoops(Portfolio="APSFBEQCHL"  #needed to find the right covariance!,
,calculation_date = as.Date("2020-02-14"),
,TargetTE = seq(0.007,0.013,0.001)
,Trials=c(100000)
,InputParameters= "" #"Signals4R"
,CovReturns=c("abs")
,cov_run_id=c(297) #c(297) #c(NA) #c(195)
,IndexFlex=FALSE #c(TRUE, FALSE)
,Ix_eq_Cash= FALSE #c(TRUE, FALSE)
,CashTolerance = 0.05 #seq(0,0.1,0.05)#seq(from=0.00,to=0.01,by=0.002), boundary for -sum(w)
,LeverageTolerance= 0.05 #seq(0,0.005,0.001)#0.025#seq(0,0.05,0.005)  #boundary for sum(w)
,algo = c("NLOPT_LD_SLSQP")# "NLOPT_LN_AUGLAG_EQ")#,"NLOPT_GN_ISRES") #"NLOPT_LD_SLSQP",  "NLOPT_LD_AUGLAG_EQ","NLOPT_LN_AUGLAG_EQ",NLOPT_LD_SLSQP","NLOPT_GN_ISRES"  #suboptimal result but optimal with X0=sol: NLOPT_LD_SLSQP,NLOPT_LD_LBFGS,NLOPT_LD_MMA(fails),
# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
,targ_from_excel = FALSE
)
RCO_res_l <- APS::runRCOLoops(Portfolio="APSFBEQCHL"  #needed to find the right covariance!,
,calculation_date = as.Date("2020-02-14"),
,TargetTE = seq(0.007,0.013,0.001)
,Trials=c(100000)
,InputParameters= "" #"Signals4R"
,CovReturns=c("abs")
,cov_run_id=c(297) #c(297) #c(NA) #c(195)
,IndexFlex=FALSE #c(TRUE, FALSE)
,Ix_eq_Cash= FALSE #c(TRUE, FALSE)
,CashTolerance = 0.05 #seq(0,0.1,0.05)#seq(from=0.00,to=0.01,by=0.002), boundary for -sum(w)
,LeverageTolerance= 0.05 #seq(0,0.005,0.001)#0.025#seq(0,0.05,0.005)  #boundary for sum(w)
,algo = c("NLOPT_LD_SLSQP")# "NLOPT_LN_AUGLAG_EQ")#,"NLOPT_GN_ISRES") #"NLOPT_LD_SLSQP",  "NLOPT_LD_AUGLAG_EQ","NLOPT_LN_AUGLAG_EQ",NLOPT_LD_SLSQP","NLOPT_GN_ISRES"  #suboptimal result but optimal with X0=sol: NLOPT_LD_SLSQP,NLOPT_LD_LBFGS,NLOPT_LD_MMA(fails),
# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
,targ_from_excel = FALSE
)
single_optim_details_df
single_optim_details_df
t.query.p1 <- paste(
"SELECT max (x.RunID) maxRunID ",
"FROM betsizing.CovarianceMatrixCalculationParams x ",
"left outer join (select * from betsizing.CovarianceMatrixCalculationParams ",
"where ParamName='relativeTo') xcm ",
"on xcm.RunID=x.RunID ",
"left outer join (select * from betsizing.CovarianceMatrixCalculationParams ",
"where ParamName='CalcDT') xdate ",
"on xdate.RunID=x.RunID ",
"where xcm.ParamName is null ",
sep = ""
)
q <- t.quer
q <- t.query.p1
q
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
length(NULL)
length("")
a <- ""
length(a)
is.empty("")
length(NA)
is.character(NA)
is.character(NULL)
library(APS)
APS::get_sh_cov_run_ids("APSFBEQCHL")
paste0("exec betsizing.uspCheckPortfolioBetsizingStatusCovMa '",
portfolio_name, "'")
debug(get_sh_cov_run_ids)
APS::get_sh_cov_run_ids("APSFBEQCHL")
query
query <- "exec betsizing.uspCheckPortfolioBetsizingStatusCovMa('APSFBEQCHL')"
result_df <- RODBC::sqlQuery(channel = connection, query = query, stringsAsFactors = FALSE)
result_df
query <- paste0("exec betsizing.uspCheckPortfolioBetsizingStatusCovMa '",
portfolio_name, "'")
# Open connection
# Execute query
result_df <- RODBC::sqlQuery(channel = connection, query = query, stringsAsFactors = FALSE)
library(APS)
APS::get_sh_cov_run_ids("APSFBEQCHL")
debug(APS::get_sh_cov_run_ids)
APS::get_sh_cov_run_ids("APSFBEQCHL")
result_df
query <- paste0("EXEC [betsizing].[uspCheckPortfolioBetsizingStatusCovMa] ",
"@pfnames = '",portfolio_name, "'")
query <- paste0("EXEC [betsizing].[uspCheckPortfolioBetsizingStatusCovMa] ",
"@pfnames = '",portfolio_name, "'")
# Open connection
connection <- FAFunc.GetDB()
# Execute query
result_df <- RODBC::sqlQuery(channel = connection, query = query, stringsAsFactors = FALSE)
# Close DB connection
RODBC::odbcClose(connection)
library(APS)
# query
query <- paste0("EXEC [betsizing].[uspCheckPortfolioBetsizingStatusCovMa] ",
"@pfnames = '",portfolio_name, "'")
portfolio_name <- 'APSFBEQCHL'
# query
query <- paste0("EXEC [betsizing].[uspCheckPortfolioBetsizingStatusCovMa] ",
"@pfnames = '",portfolio_name, "'")
# Open connection
connection <- FAFunc.GetDB()
# Execute query
result_df <- RODBC::sqlQuery(channel = connection, query = query, stringsAsFactors = FALSE)
# Execute query
result_df <- RODBC::sqlQuery(channel = connection, query = query, stringsAsFactors = FALSE)
query
query <- paste0("EXEC [betsizing].[uspCheckPortfolioBetsizingStatusCovMa] ",
"@pfnames = '",portfolio_name, "';")
# Open connection
connection <- FAFunc.GetDB()
# Execute query
result_df <- RODBC::sqlQuery(channel = connection, query = query, stringsAsFactors = FALSE)
# Close DB connection
RODBC::odbcClose(connection)
# query
query <- paste0("EXEC [betsizing].[uspCheckPortfolioBetsizingStatusCovMa] ",
"@pfnames = '",portfolio_name, "';")
# Open connection
connection <- FAFunc.GetDB()
# Execute query
result_df <- RODBC::sqlQuery(channel = connection, query = query)#, stringsAsFactors = FALSE
library(APS)
APS::get_sh_cov_run_ids("APSFBEQCHL")
debug(APS::get_sh_cov_run_ids)
APS::get_sh_cov_run_ids("APSFBEQCHL")
library(APS)
library(APS)
library(APS)
library(APS)
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA/app production.R')
# TODO distance does not work correctly with different X variables
source("G:/FAP/Equities/Betsizing/Code/RCOTest.R")
# TODO distance does not work correctly with different X variables
source("G:/FAP/Equities/Betsizing/Code/RCO.R")
source("G:/FAP/Equities/Betsizing/CodeTest/paa/RCOTest.R")
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
APS::get_sh_cov_run_ids("APSFBEQCHL")
debug(APS::get_sh_cov_run_ids)
APS::get_sh_cov_run_ids("APSFBEQCHL")
results
result_df
# query
query <- paste0("EXEC [betsizing].[uspCheckPortfolioBetsizingStatusCovMa] ",
"@pfnames = '",portfolio_name, "'",
"@onlyGoodOnes = 1")
connection <- FAFunc.GetDB()
# Execute query
result_df <- RODBC::sqlQuery(channel = connection, query = query, stringsAsFactors = FALSE)
# Close DB connection
RODBC::odbcClose(connection)
query <- paste0("EXEC [betsizing].[uspCheckPortfolioBetsizingStatusCovMa] ",
"@pfnames = '",portfolio_name, "'",
"@onlyGoodOnes = 1")
query
query <- paste0("EXEC [betsizing].[uspCheckPortfolioBetsizingStatusCovMa] ",
"@pfnames = '",portfolio_name, "' ",
"@onlyGoodOnes = 1")
query
query <- paste0("EXEC [betsizing].[uspCheckPortfolioBetsizingStatusCovMa] ",
"@pfnames = '",portfolio_name, "', ",
"@onlyGoodOnes = 1")
connection <- FAFunc.GetDB()
# Execute query
result_df <- RODBC::sqlQuery(channel = connection, query = query, stringsAsFactors = FALSE)
# Close DB connection
RODBC::odbcClose(connection)
library(APS)
APS::get_sh_cov_run_ids("APSFBEQCHL")
debug(APS::get_sh_cov_run_ids)
APS::get_sh_cov_run_ids("APSFBEQCHL")
library(APS)
APS::get_sh_cov_run_ids("APSFBEQCHL")
debug(APS::get_sh_cov_run_ids)
APS::get_sh_cov_run_ids("APSFBEQCHL")
query
APS::get_sh_cov_run_ids("APSFBEQCHL")
query
APS::get_sh_cov_run_ids("APSFBEQCHL")
View(result_df)
APS::get_sh_cov_run_ids("APSFBEQCHL")
sh_values_v
library(APS)
a <- c("(d) sd", "df", "dsf")
b <- "(d)"
grepl(pattern = b, x = a)
?grepl
grepl(pattern = b, x = a, fixed = TRUE)
a <- c("sdfs", "df","(d) sd", "dsf (d)")
grepl(pattern = b, x = a, fixed = TRUE)
?grep
grep(pattern = b, x = a, fixed = TRUE)
library(APS)
runApp()
runApp()
runApp()
runApp()
portfolio_name <- 'APSFBEQCHL'
runApp()
portfolio_name <- 'APSFBEQCHL'
View(available_cov_run_ids_l)
portfolio_name <- 'APSFBEQCHL'
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
input$setid
debug(plotSingleSetIDfromRCOres)
setid
View(RCOres_l$RiskContribution)
library(APS)
RCO_res_l <- APS::runRCOLoops(Portfolio="RE_EU"  #needed to find the right covariance!
,targ_from_excel = FALSE
,calculation_date = as.Date("2020-02-14")
,TargetTE = seq(0.007,0.013,0.001)
,Trials=c(100000)
,InputParameters="Signals4R"
,CovReturns=c("abs")
,cov_run_id=c(310,311,312) #c(297) #c(NA) #c(195)
,IndexFlex=FALSE #c(TRUE, FALSE)
,Ix_eq_Cash= FALSE #c(TRUE, FALSE)
,CashTolerance = 0.05 #seq(0,0.1,0.05)#seq(from=0.00,to=0.01,by=0.002), boundary for -sum(w)
,LeverageTolerance= 0.05 #seq(0,0.005,0.001)#0.025#seq(0,0.05,0.005)  #boundary for sum(w)
,algo = c("NLOPT_LD_SLSQP")# "NLOPT_LN_AUGLAG_EQ")#,"NLOPT_GN_ISRES") #"NLOPT_LD_SLSQP",  "NLOPT_LD_AUGLAG_EQ","NLOPT_LN_AUGLAG_EQ",NLOPT_LD_SLSQP","NLOPT_GN_ISRES"  #suboptimal result but optimal with X0=sol: NLOPT_LD_SLSQP,NLOPT_LD_LBFGS,NLOPT_LD_MMA(fails),
# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
)
RCO_res_l <- APS::runRCOLoops(Portfolio="RE_EU"  #needed to find the right covariance!
,targ_from_excel = T
,calculation_date = as.Date("2020-02-14")
,TargetTE = seq(0.007,0.013,0.001)
,Trials=c(100000)
,InputParameters="Signals4R"
,CovReturns=c("abs")
,cov_run_id=c(310,311,312) #c(297) #c(NA) #c(195)
,IndexFlex=FALSE #c(TRUE, FALSE)
,Ix_eq_Cash= FALSE #c(TRUE, FALSE)
,CashTolerance = 0.05 #seq(0,0.1,0.05)#seq(from=0.00,to=0.01,by=0.002), boundary for -sum(w)
,LeverageTolerance= 0.05 #seq(0,0.005,0.001)#0.025#seq(0,0.05,0.005)  #boundary for sum(w)
,algo = c("NLOPT_LD_SLSQP")# "NLOPT_LN_AUGLAG_EQ")#,"NLOPT_GN_ISRES") #"NLOPT_LD_SLSQP",  "NLOPT_LD_AUGLAG_EQ","NLOPT_LN_AUGLAG_EQ",NLOPT_LD_SLSQP","NLOPT_GN_ISRES"  #suboptimal result but optimal with X0=sol: NLOPT_LD_SLSQP,NLOPT_LD_LBFGS,NLOPT_LD_MMA(fails),
# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
)
View(RCO_res_l$RiskContribution)
sapply(seq(1:20),FUN = function(x){paste0("set",x)})
names(RCO_res_l$RiskContribution) <- sapply(seq(1:21),FUN = function(x){paste0("set",x)})
View(RCO_res_l$RiskContribution)
RCO_res_l <- APS::runRCOLoops(Portfolio="RE_EU"  #needed to find the right covariance!
,targ_from_excel = T
,calculation_date = as.Date("2020-02-14")
,TargetTE = seq(0.007,0.013,0.001)
,Trials=c(100000)
,InputParameters="Signals4R"
,CovReturns=c("abs")
,cov_run_id=c(310,311,312) #c(297) #c(NA) #c(195)
,IndexFlex=FALSE #c(TRUE, FALSE)
,Ix_eq_Cash= FALSE #c(TRUE, FALSE)
,CashTolerance = 0.05 #seq(0,0.1,0.05)#seq(from=0.00,to=0.01,by=0.002), boundary for -sum(w)
,LeverageTolerance= 0.05 #seq(0,0.005,0.001)#0.025#seq(0,0.05,0.005)  #boundary for sum(w)
,algo = c("NLOPT_LD_SLSQP")# "NLOPT_LN_AUGLAG_EQ")#,"NLOPT_GN_ISRES") #"NLOPT_LD_SLSQP",  "NLOPT_LD_AUGLAG_EQ","NLOPT_LN_AUGLAG_EQ",NLOPT_LD_SLSQP","NLOPT_GN_ISRES"  #suboptimal result but optimal with X0=sol: NLOPT_LD_SLSQP,NLOPT_LD_LBFGS,NLOPT_LD_MMA(fails),
# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
)
runApp()
class(RCO_res_l$RiskContribution[[1]])
RCO_res_l$RiskContribution[[1]]
library(APS)
runApp()
debug(plotSingleSetIDfromRCOres)
debug(plotSingleSetIDfromRCOres)
RCOres_l$RiskContribution
View(RCOres_l)
runApp()
library(APS)
RCO_res_l <- APS::runRCOLoops(Portfolio="RE_EU"  #needed to find the right covariance!
,targ_from_excel = T
,calculation_date = as.Date("2020-02-14")
,TargetTE = seq(0.007,0.013,0.001)
,Trials=c(100000)
,InputParameters="Signals4R"
,CovReturns=c("abs")
,cov_run_id=c(310,311,312) #c(297) #c(NA) #c(195)
,IndexFlex=FALSE #c(TRUE, FALSE)
,Ix_eq_Cash= FALSE #c(TRUE, FALSE)
,CashTolerance = 0.05 #seq(0,0.1,0.05)#seq(from=0.00,to=0.01,by=0.002), boundary for -sum(w)
,LeverageTolerance= 0.05 #seq(0,0.005,0.001)#0.025#seq(0,0.05,0.005)  #boundary for sum(w)
,algo = c("NLOPT_LD_SLSQP")# "NLOPT_LN_AUGLAG_EQ")#,"NLOPT_GN_ISRES") #"NLOPT_LD_SLSQP",  "NLOPT_LD_AUGLAG_EQ","NLOPT_LN_AUGLAG_EQ",NLOPT_LD_SLSQP","NLOPT_GN_ISRES"  #suboptimal result but optimal with X0=sol: NLOPT_LD_SLSQP,NLOPT_LD_LBFGS,NLOPT_LD_MMA(fails),
# suboptimal result even with X0=Sol: NLOPT_LD_AUGLAG
# error message nlopt_add_inequality_mconstraints returned NLOPT_INVALID_ARG: NLOPT_GD_STOGO,NLOPT_LD_AUGLAG, NLOPT_LD_TNEWTON,NLOPT_LD_TNEWTON_PRECOND
,NetInvLambda= 100# c(0,100,250,500)#10^seq(1,4,0.5)
,LowConvictionExitInDays = 100 # c(1,5,10,15,30)
,ConvictionGroups = 1 #c(1,2,5)
)
runApp()
runApp()
install.packages("readxl", lib="C:/Program Files/R/R-3.6.1/library")
library(readxl)
portfolio_name" <- "RE_EU"
portfolio_name <- "RE_EU"
if(portfolio_name == "RE_EU"){
folder_path <- "G:/FAP/Immobilien_Modell/"
input_file <- "Betsizing.xlsx"
path <- paste(folder_path, input_file, sep = "", collapse = "")
}else{
folder_path <- "G:/FAP/Equities/Betsizing/"
input_file <- paste("bet_targets_",Portfolio,".xlsx",sep="",collapse="")
path <- paste(folder_path, input_file, sep = "", collapse = "")
}
ws_v <- readxl::excel_sheets(path = path)
ws_v
get_sh_ws <- function(portfolio_name, date){
if(is.character(portfolio_name) &&
length(portfolio_name) == 1 &&
isDate(date) &&
length(date) == 1){
path <- NULL
# define file pathes (add switch to specify exact location for each portfolio)
if(portfolio_name == "RE_EU"){
folder_path <- "G:/FAP/Immobilien_Modell/"
input_file <- "Betsizing.xlsx"
path <- paste(folder_path, input_file, sep = "", collapse = "")
}else{
folder_path <- "G:/FAP/Equities/Betsizing/"
input_file <- paste("bet_targets_",Portfolio,".xlsx",sep="",collapse="")
path <- paste(folder_path, input_file, sep = "", collapse = "")
}
ws_v <- readxl::excel_sheets(path = path)
return(ws_v)
}else{
print("get_sh_ws: input parameters have wrong type and/or length")
stop("get_sh_ws: input parameters have wrong type and/or length")
}
}
shiny::runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
library(APS)
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
install.packages("shinyjs", lib="C:/Program Files/R/R-3.6.1/library")
install.packages("shinyjs", lib="C:/Program Files/R/R-3.6.1/library")
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
portfolio_name <- "APSFBEQCHL"
portfolio_name <- input$portfolio
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
library(APS)
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
runApp('G:/FAP/Equities/Betsizing/Code/shinyPAA')
